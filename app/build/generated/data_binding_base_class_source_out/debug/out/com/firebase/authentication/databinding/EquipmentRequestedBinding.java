// Generated by view binder compiler. Do not edit!
package com.firebase.authentication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.firebase.authentication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EquipmentRequestedBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button acceptRequestButton;

  @NonNull
  public final TextView dateEquipmentWasCreatedResults;

  @NonNull
  public final TextView dateEquipmentWasCreatedTitle;

  @NonNull
  public final TextView equipmentDetailsResults;

  @NonNull
  public final TextView equipmentDetailsTitle;

  @NonNull
  public final TextView equipmentNameResults;

  @NonNull
  public final TextView equipmentNameTitle;

  @NonNull
  public final TextView equipmentPriceResults;

  @NonNull
  public final TextView equipmentPriceTitle;

  @NonNull
  public final TextView equipmentUsageResults;

  @NonNull
  public final TextView equipmentUsageTitle;

  @NonNull
  public final TextView locationResults1;

  @NonNull
  public final TextView locationTitle;

  @NonNull
  public final Button rejectRequestButton;

  private EquipmentRequestedBinding(@NonNull CardView rootView, @NonNull Button acceptRequestButton,
      @NonNull TextView dateEquipmentWasCreatedResults,
      @NonNull TextView dateEquipmentWasCreatedTitle, @NonNull TextView equipmentDetailsResults,
      @NonNull TextView equipmentDetailsTitle, @NonNull TextView equipmentNameResults,
      @NonNull TextView equipmentNameTitle, @NonNull TextView equipmentPriceResults,
      @NonNull TextView equipmentPriceTitle, @NonNull TextView equipmentUsageResults,
      @NonNull TextView equipmentUsageTitle, @NonNull TextView locationResults1,
      @NonNull TextView locationTitle, @NonNull Button rejectRequestButton) {
    this.rootView = rootView;
    this.acceptRequestButton = acceptRequestButton;
    this.dateEquipmentWasCreatedResults = dateEquipmentWasCreatedResults;
    this.dateEquipmentWasCreatedTitle = dateEquipmentWasCreatedTitle;
    this.equipmentDetailsResults = equipmentDetailsResults;
    this.equipmentDetailsTitle = equipmentDetailsTitle;
    this.equipmentNameResults = equipmentNameResults;
    this.equipmentNameTitle = equipmentNameTitle;
    this.equipmentPriceResults = equipmentPriceResults;
    this.equipmentPriceTitle = equipmentPriceTitle;
    this.equipmentUsageResults = equipmentUsageResults;
    this.equipmentUsageTitle = equipmentUsageTitle;
    this.locationResults1 = locationResults1;
    this.locationTitle = locationTitle;
    this.rejectRequestButton = rejectRequestButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static EquipmentRequestedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EquipmentRequestedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.equipment_requested, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EquipmentRequestedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accept_request_button;
      Button acceptRequestButton = ViewBindings.findChildViewById(rootView, id);
      if (acceptRequestButton == null) {
        break missingId;
      }

      id = R.id.date_equipment_was_created_results;
      TextView dateEquipmentWasCreatedResults = ViewBindings.findChildViewById(rootView, id);
      if (dateEquipmentWasCreatedResults == null) {
        break missingId;
      }

      id = R.id.date_equipment_was_created_title;
      TextView dateEquipmentWasCreatedTitle = ViewBindings.findChildViewById(rootView, id);
      if (dateEquipmentWasCreatedTitle == null) {
        break missingId;
      }

      id = R.id.equipment_details_results;
      TextView equipmentDetailsResults = ViewBindings.findChildViewById(rootView, id);
      if (equipmentDetailsResults == null) {
        break missingId;
      }

      id = R.id.equipment_details_title;
      TextView equipmentDetailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentDetailsTitle == null) {
        break missingId;
      }

      id = R.id.equipment_name_results;
      TextView equipmentNameResults = ViewBindings.findChildViewById(rootView, id);
      if (equipmentNameResults == null) {
        break missingId;
      }

      id = R.id.equipment_name_title;
      TextView equipmentNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentNameTitle == null) {
        break missingId;
      }

      id = R.id.equipment_price_results;
      TextView equipmentPriceResults = ViewBindings.findChildViewById(rootView, id);
      if (equipmentPriceResults == null) {
        break missingId;
      }

      id = R.id.equipment_price_title;
      TextView equipmentPriceTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentPriceTitle == null) {
        break missingId;
      }

      id = R.id.equipment_usage_results;
      TextView equipmentUsageResults = ViewBindings.findChildViewById(rootView, id);
      if (equipmentUsageResults == null) {
        break missingId;
      }

      id = R.id.equipment_usage_title;
      TextView equipmentUsageTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentUsageTitle == null) {
        break missingId;
      }

      id = R.id.location_results_1;
      TextView locationResults1 = ViewBindings.findChildViewById(rootView, id);
      if (locationResults1 == null) {
        break missingId;
      }

      id = R.id.location_title;
      TextView locationTitle = ViewBindings.findChildViewById(rootView, id);
      if (locationTitle == null) {
        break missingId;
      }

      id = R.id.reject_request_button;
      Button rejectRequestButton = ViewBindings.findChildViewById(rootView, id);
      if (rejectRequestButton == null) {
        break missingId;
      }

      return new EquipmentRequestedBinding((CardView) rootView, acceptRequestButton,
          dateEquipmentWasCreatedResults, dateEquipmentWasCreatedTitle, equipmentDetailsResults,
          equipmentDetailsTitle, equipmentNameResults, equipmentNameTitle, equipmentPriceResults,
          equipmentPriceTitle, equipmentUsageResults, equipmentUsageTitle, locationResults1,
          locationTitle, rejectRequestButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
