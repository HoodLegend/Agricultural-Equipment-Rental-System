// Generated by view binder compiler. Do not edit!
package com.firebase.authentication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.firebase.authentication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BookEquipmentBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button cancelRequestEquipmentButton;

  @NonNull
  public final TextView dateEquipmentWasCreatedResults2;

  @NonNull
  public final TextView dateEquipmentWasCreatedTitle;

  @NonNull
  public final TextView equipmentDetailsResults2;

  @NonNull
  public final TextView equipmentDetailsTitle;

  @NonNull
  public final TextView equipmentNameResults2;

  @NonNull
  public final TextView equipmentNameTitle;

  @NonNull
  public final TextView equipmentPriceResults2;

  @NonNull
  public final TextView equipmentPriceTitle;

  @NonNull
  public final TextView equipmentUsageResults2;

  @NonNull
  public final TextView equipmentUsageTitle;

  @NonNull
  public final TextView locationResults;

  @NonNull
  public final TextView locationTitle;

  @NonNull
  public final Button returnEquipmentButton;

  @NonNull
  public final Button sendRequestForEquipmentButton;

  private BookEquipmentBinding(@NonNull CardView rootView,
      @NonNull Button cancelRequestEquipmentButton,
      @NonNull TextView dateEquipmentWasCreatedResults2,
      @NonNull TextView dateEquipmentWasCreatedTitle, @NonNull TextView equipmentDetailsResults2,
      @NonNull TextView equipmentDetailsTitle, @NonNull TextView equipmentNameResults2,
      @NonNull TextView equipmentNameTitle, @NonNull TextView equipmentPriceResults2,
      @NonNull TextView equipmentPriceTitle, @NonNull TextView equipmentUsageResults2,
      @NonNull TextView equipmentUsageTitle, @NonNull TextView locationResults,
      @NonNull TextView locationTitle, @NonNull Button returnEquipmentButton,
      @NonNull Button sendRequestForEquipmentButton) {
    this.rootView = rootView;
    this.cancelRequestEquipmentButton = cancelRequestEquipmentButton;
    this.dateEquipmentWasCreatedResults2 = dateEquipmentWasCreatedResults2;
    this.dateEquipmentWasCreatedTitle = dateEquipmentWasCreatedTitle;
    this.equipmentDetailsResults2 = equipmentDetailsResults2;
    this.equipmentDetailsTitle = equipmentDetailsTitle;
    this.equipmentNameResults2 = equipmentNameResults2;
    this.equipmentNameTitle = equipmentNameTitle;
    this.equipmentPriceResults2 = equipmentPriceResults2;
    this.equipmentPriceTitle = equipmentPriceTitle;
    this.equipmentUsageResults2 = equipmentUsageResults2;
    this.equipmentUsageTitle = equipmentUsageTitle;
    this.locationResults = locationResults;
    this.locationTitle = locationTitle;
    this.returnEquipmentButton = returnEquipmentButton;
    this.sendRequestForEquipmentButton = sendRequestForEquipmentButton;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static BookEquipmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BookEquipmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.book_equipment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BookEquipmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cancel_request_equipment_button;
      Button cancelRequestEquipmentButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelRequestEquipmentButton == null) {
        break missingId;
      }

      id = R.id.date_equipment_was_created_results_2;
      TextView dateEquipmentWasCreatedResults2 = ViewBindings.findChildViewById(rootView, id);
      if (dateEquipmentWasCreatedResults2 == null) {
        break missingId;
      }

      id = R.id.date_equipment_was_created_title;
      TextView dateEquipmentWasCreatedTitle = ViewBindings.findChildViewById(rootView, id);
      if (dateEquipmentWasCreatedTitle == null) {
        break missingId;
      }

      id = R.id.equipment_details_results_2;
      TextView equipmentDetailsResults2 = ViewBindings.findChildViewById(rootView, id);
      if (equipmentDetailsResults2 == null) {
        break missingId;
      }

      id = R.id.equipment_details_title;
      TextView equipmentDetailsTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentDetailsTitle == null) {
        break missingId;
      }

      id = R.id.equipment_name_results_2;
      TextView equipmentNameResults2 = ViewBindings.findChildViewById(rootView, id);
      if (equipmentNameResults2 == null) {
        break missingId;
      }

      id = R.id.equipment_name_title;
      TextView equipmentNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentNameTitle == null) {
        break missingId;
      }

      id = R.id.equipment_price_results_2;
      TextView equipmentPriceResults2 = ViewBindings.findChildViewById(rootView, id);
      if (equipmentPriceResults2 == null) {
        break missingId;
      }

      id = R.id.equipment_price_title;
      TextView equipmentPriceTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentPriceTitle == null) {
        break missingId;
      }

      id = R.id.equipment_usage_results_2;
      TextView equipmentUsageResults2 = ViewBindings.findChildViewById(rootView, id);
      if (equipmentUsageResults2 == null) {
        break missingId;
      }

      id = R.id.equipment_usage_title;
      TextView equipmentUsageTitle = ViewBindings.findChildViewById(rootView, id);
      if (equipmentUsageTitle == null) {
        break missingId;
      }

      id = R.id.location_results;
      TextView locationResults = ViewBindings.findChildViewById(rootView, id);
      if (locationResults == null) {
        break missingId;
      }

      id = R.id.location_title;
      TextView locationTitle = ViewBindings.findChildViewById(rootView, id);
      if (locationTitle == null) {
        break missingId;
      }

      id = R.id.return__equipment_button;
      Button returnEquipmentButton = ViewBindings.findChildViewById(rootView, id);
      if (returnEquipmentButton == null) {
        break missingId;
      }

      id = R.id.send_request_for_equipment_button;
      Button sendRequestForEquipmentButton = ViewBindings.findChildViewById(rootView, id);
      if (sendRequestForEquipmentButton == null) {
        break missingId;
      }

      return new BookEquipmentBinding((CardView) rootView, cancelRequestEquipmentButton,
          dateEquipmentWasCreatedResults2, dateEquipmentWasCreatedTitle, equipmentDetailsResults2,
          equipmentDetailsTitle, equipmentNameResults2, equipmentNameTitle, equipmentPriceResults2,
          equipmentPriceTitle, equipmentUsageResults2, equipmentUsageTitle, locationResults,
          locationTitle, returnEquipmentButton, sendRequestForEquipmentButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
