// Generated by view binder compiler. Do not edit!
package com.firebase.authentication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.firebase.authentication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUploadEquipmentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button backToDashboardButton;

  @NonNull
  public final EditText detailsOfEquipment;

  @NonNull
  public final EditText locationOfEquipment;

  @NonNull
  public final EditText nameOfEquipment;

  @NonNull
  public final EditText priceOfEquipment;

  @NonNull
  public final Button uploadButton;

  @NonNull
  public final TextView uploadEquipmentTitle;

  @NonNull
  public final EditText usageOfEquipment;

  private ActivityUploadEquipmentBinding(@NonNull LinearLayout rootView,
      @NonNull Button backToDashboardButton, @NonNull EditText detailsOfEquipment,
      @NonNull EditText locationOfEquipment, @NonNull EditText nameOfEquipment,
      @NonNull EditText priceOfEquipment, @NonNull Button uploadButton,
      @NonNull TextView uploadEquipmentTitle, @NonNull EditText usageOfEquipment) {
    this.rootView = rootView;
    this.backToDashboardButton = backToDashboardButton;
    this.detailsOfEquipment = detailsOfEquipment;
    this.locationOfEquipment = locationOfEquipment;
    this.nameOfEquipment = nameOfEquipment;
    this.priceOfEquipment = priceOfEquipment;
    this.uploadButton = uploadButton;
    this.uploadEquipmentTitle = uploadEquipmentTitle;
    this.usageOfEquipment = usageOfEquipment;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUploadEquipmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUploadEquipmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_upload_equipment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUploadEquipmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back_to_dashboard_button;
      Button backToDashboardButton = ViewBindings.findChildViewById(rootView, id);
      if (backToDashboardButton == null) {
        break missingId;
      }

      id = R.id.details_of_equipment;
      EditText detailsOfEquipment = ViewBindings.findChildViewById(rootView, id);
      if (detailsOfEquipment == null) {
        break missingId;
      }

      id = R.id.location_of_equipment;
      EditText locationOfEquipment = ViewBindings.findChildViewById(rootView, id);
      if (locationOfEquipment == null) {
        break missingId;
      }

      id = R.id.name_of_equipment;
      EditText nameOfEquipment = ViewBindings.findChildViewById(rootView, id);
      if (nameOfEquipment == null) {
        break missingId;
      }

      id = R.id.price_of_equipment;
      EditText priceOfEquipment = ViewBindings.findChildViewById(rootView, id);
      if (priceOfEquipment == null) {
        break missingId;
      }

      id = R.id.upload_button;
      Button uploadButton = ViewBindings.findChildViewById(rootView, id);
      if (uploadButton == null) {
        break missingId;
      }

      id = R.id.upload_equipment_title;
      TextView uploadEquipmentTitle = ViewBindings.findChildViewById(rootView, id);
      if (uploadEquipmentTitle == null) {
        break missingId;
      }

      id = R.id.usage_of_equipment;
      EditText usageOfEquipment = ViewBindings.findChildViewById(rootView, id);
      if (usageOfEquipment == null) {
        break missingId;
      }

      return new ActivityUploadEquipmentBinding((LinearLayout) rootView, backToDashboardButton,
          detailsOfEquipment, locationOfEquipment, nameOfEquipment, priceOfEquipment, uploadButton,
          uploadEquipmentTitle, usageOfEquipment);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
